@page "/add-movie"
@inject HttpClient Http
@using System.Net.Http.Headers
@using Microsoft.AspNetCore.Components.Forms

<h3>Add New Movie</h3>

<EditForm Model="@newMovie" OnValidSubmit="HandleSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label>Title</label>
        <InputText class="form-control" @bind-Value="newMovie.Title" />
    </div>

    <div class="form-group mt-2">
        <label>Description</label>
        <InputTextArea class="form-control" @bind-Value="newMovie.Description" />
    </div>

    <div class="form-group mt-2">
        <label>Image</label>
        <InputFile OnChange="HandleFileSelected" />
    </div>

    <button class="btn btn-primary mt-3" type="submit">Submit</button>
</EditForm>

@if (uploadStatus != null)
{
    <p class="mt-3 text-info">@uploadStatus</p>
}

@code {
    private MovieModel newMovie = new();
    private IBrowserFile? selectedImage;
    private string? uploadStatus;

    private async Task HandleFileSelected(InputFileChangeEventArgs e)
    {
        selectedImage = e.File;
    }

    private async Task HandleSubmit()
    {
        if (selectedImage == null)
        {
            uploadStatus = "Please select an image.";
            return;
        }

        using var content = new MultipartFormDataContent();

        content.Add(new StringContent(newMovie.Title ?? ""), "Title");
        content.Add(new StringContent(newMovie.Description ?? ""), "Description");

        // Convert the selected image to stream content
        var imageStream = selectedImage.OpenReadStream(maxAllowedSize: 5 * 1024 * 1024);
        var streamContent = new StreamContent(imageStream);
        streamContent.Headers.ContentType = new MediaTypeHeaderValue(selectedImage.ContentType);

        content.Add(streamContent, "UploadedImage", selectedImage.Name);

        var response = await Http.PostAsync("api/Movies", content);

        if (response.IsSuccessStatusCode)
        {
            uploadStatus = "Movie uploaded successfully!";
            newMovie = new MovieModel(); // Reset form
            selectedImage = null;
        }
        else
        {
            uploadStatus = $"Upload failed: {response.ReasonPhrase}";
        }
    }

    public class MovieModel
    {
        public string? Title { get; set; }
        public string? Description { get; set; }
    }
}
